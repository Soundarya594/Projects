# -*- coding: utf-8 -*-
"""Linear Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AjIESh0-k48VQ56P8UOI1eFn4S7bJOQU
"""

import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Fetch historical stock data
ticker = "TATASTEEL.NS"  # NSE ticker for Tata Steel
stock_data = yf.download(ticker, start="2020-01-01", end="2024-01-01")

# Prepare dataset
stock_data['Date'] = stock_data.index
stock_data['Days'] = (stock_data['Date'] - stock_data['Date'].min()).dt.days

X = stock_data[['Days']]
y = stock_data['Close']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"Root Mean Squared Error: {rmse}")

# Plot results
plt.figure(figsize=(10, 5))
plt.scatter(X_test, y_test, color='blue', label='Actual Prices')
plt.plot(X_test, y_pred, color='red', label='Predicted Prices')
plt.xlabel("Days since start")
plt.ylabel("Stock Price (INR)")
plt.title("Tata Steel Stock Price Prediction using Simple Linear Regression")
plt.legend()
plt.show()